// Code generated by options-gen v0.52.1. DO NOT EDIT.

package admin

import (
	"crypto/tls"
	fmt461e464ebed9 "fmt"

	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	options ...OptOptionsSetter,
) Options {
	var o Options

	// Setting defaults from variable
	o.bootstrapServers = defaultOptions.bootstrapServers
	o.tlsConfig = defaultOptions.tlsConfig

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func WithBootstrapServers(opt []string) OptOptionsSetter {
	return func(o *Options) { o.bootstrapServers = opt }
}

func WithTlsConfig(opt *tls.Config) OptOptionsSetter {
	return func(o *Options) { o.tlsConfig = opt }
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("bootstrapServers", _validate_Options_bootstrapServers(o)))
	return errs.AsError()
}

func _validate_Options_bootstrapServers(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.bootstrapServers, "required,min=1"); err != nil {
		return fmt461e464ebed9.Errorf("field `bootstrapServers` did not pass the test: %w", err)
	}
	return nil
}
